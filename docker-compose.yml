version: '3.8'

services:
  app:
    build: 
      context: ./server
      dockerfile: app/Dockerfile
    ports:
      - "8002:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:admin@db:5432/plnts
      - USE_LOCAL_HARDWARE=true
      - ENVIRONMENT=docker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=plnts
    volumes:
      - ./server/shared:/app/shared
      - ./server/app:/app/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  adaptor:
    build:
      context: ./server
      dockerfile: adaptor/Dockerfile
    ports:
      - "8003:5000"
    environment:
      - ENVIRONMENT=docker
    volumes:
      - ./server/shared:/app/shared
      - ./server/adaptor:/app/adaptor
    networks:
      - app-network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=plnts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "8001:5432"
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=/api
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client/build:/usr/share/nginx/html
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    depends_on:
      - client
      - app
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge